name: Jekyll Build & Preview

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write   # needed for commenting

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Ruby
        uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a # v1.263.0
        with:
          ruby-version: 3.2.2   # match your Gemfile
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      # Build differently for PR vs main
      - name: Build Jekyll site (PR Preview)
        if: github.event_name == 'pull_request'
        run: bundle exec jekyll build \
          --trace --verbose \
          --destination ./_site \
          --baseurl "/pr-${{ github.event.pull_request.number }}"

      - name: Build Jekyll site (Production)
        if: github.ref == 'refs/heads/main'
        run: bundle exec jekyll build \
          --trace --verbose \
          --destination ./_site

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: ./_site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: preview-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

      - name: Comment preview URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request.number;
            const url = `${{ steps.deployment.outputs.page_url }}/pr-${pr}/`;
            const body = `ðŸš€ Jekyll preview is ready: [${url}](${url})`;

            const { data: comments } = await github.rest.issues.listComments({
              issue_number: pr,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const botComment = comments.find(
              c => c.user.type === "Bot" && c.body.includes("ðŸš€ Jekyll preview is ready")
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                issue_number: pr,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
              });
            }
